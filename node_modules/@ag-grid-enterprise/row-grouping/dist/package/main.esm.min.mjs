import{ModuleNames as y,_ColumnFilterModule as z,_FloatingFilterModule as J,_defineModule as C}from"@ag-grid-community/core";import{EnterpriseCoreModule as Q,GroupCellRenderer as b,GroupCellRendererCtrl as Y}from"@ag-grid-enterprise/core";import{BeanStub as ee,_exists as x,_existsAndNotEmpty as te,_includes as oe,_iterateObject as re,_last as se}from"@ag-grid-community/core";var ne={sum:"Sum",first:"First",last:"Last",min:"Min",max:"Max",count:"Count",avg:"Average"},ie=class extends ee{constructor(){super(...arguments),this.beanName="aggFuncService",this.aggFuncsMap={},this.initialised=!1}postConstruct(){this.init()}init(){this.initialised||(this.initialiseWithDefaultAggregations(),this.addAggFuncs(this.gos.get("aggFuncs")))}initialiseWithDefaultAggregations(){const e=this.aggFuncsMap;e.sum=le,e.first=ae,e.last=ue,e.min=ce,e.max=he,e.count=pe,e.avg=de,this.initialised=!0}isAggFuncPossible(e,t){const o=this.getFuncNames(e),r=oe(o,t),s=x(this.aggFuncsMap[t]);return r&&s}getDefaultFuncLabel(e){return ne[e]??e}getDefaultAggFunc(e){const t=e.getColDef().defaultAggFunc;if(x(t)&&this.isAggFuncPossible(e,t))return t;if(this.isAggFuncPossible(e,"sum"))return"sum";const o=this.getFuncNames(e);return te(o)?o[0]:null}addAggFuncs(e){this.init(),re(e,(t,o)=>{this.aggFuncsMap[t]=o})}getAggFunc(e){return this.init(),this.aggFuncsMap[e]}getFuncNames(e){const t=e.getColDef().allowedAggFuncs;return t??Object.keys(this.aggFuncsMap).sort()}clear(){this.aggFuncsMap={}}};function le(e){const{values:t}=e;let o=null;for(let r=0;r<t.length;r++){const s=t[r];typeof s=="number"?o===null?o=s:o+=typeof o=="number"?s:BigInt(s):typeof s=="bigint"&&(o===null?o=s:o=(typeof o=="bigint"?o:BigInt(o))+s)}return o}function ae(e){return e.values.length>0?e.values[0]:null}function ue(e){return e.values.length>0?se(e.values):null}function ce(e){const{values:t}=e;let o=null;for(let r=0;r<t.length;r++){const s=t[r];(typeof s=="number"||typeof s=="bigint")&&(o===null||o>s)&&(o=s)}return o}function he(e){const{values:t}=e;let o=null;for(let r=0;r<t.length;r++){const s=t[r];(typeof s=="number"||typeof s=="bigint")&&(o===null||o<s)&&(o=s)}return o}function pe(e){const{values:t}=e;let o=0;for(let s=0;s<t.length;s++){const n=t[s];o+=n!=null&&typeof n.value=="number"?n.value:1}const r=e.rowNode?.aggData?.[e.column.getColId()];return r&&r.value===o?r:{value:o,toString:function(){return this.value.toString()},toNumber:function(){return this.value}}}function de(e){const{values:t}=e;let o=0,r=0;for(let i=0;i<t.length;i++){const l=t[i];let a=null;typeof l=="number"||typeof l=="bigint"?(a=l,r++):l!=null&&(typeof l.value=="number"||typeof l.value=="bigint")&&typeof l.count=="number"&&(a=l.value*(typeof l.value=="number"?l.count:BigInt(l.count)),r+=l.count),typeof a=="number"?o+=typeof o=="number"?a:BigInt(a):typeof a=="bigint"&&(o=(typeof o=="bigint"?o:BigInt(o))+a)}let s=null;r>0&&(s=o/(typeof o=="number"?r:BigInt(r)));const n=e.rowNode?.aggData?.[e.column?.getColId()];return n&&n.count===r&&n.value===s?n:{count:r,value:s,toString:function(){return typeof this.value=="number"||typeof this.value=="bigint"?this.value.toString():""},toNumber:function(){return this.value}}}import{BeanStub as ge,_errorOnce as me,_missingOrEmpty as fe}from"@ag-grid-community/core";var Ce=class extends ge{constructor(){super(...arguments),this.beanName="aggregationStage"}wireBeans(e){this.columnModel=e.columnModel,this.aggFuncService=e.aggFuncService,this.funcColsService=e.funcColsService,this.pivotResultColsService=e.pivotResultColsService,this.valueService=e.valueService}execute(e){const t=fe(this.funcColsService.getValueColumns()),o=!this.gos.getCallback("getGroupRowAgg"),r=e.changedPath&&e.changedPath.isActive();if(t&&o&&r)return;const s=this.createAggDetails(e);this.recursivelyCreateAggData(s)}createAggDetails(e){const t=this.columnModel.isPivotActive(),o=this.funcColsService.getValueColumns(),r=t?this.funcColsService.getPivotColumns():[];return{alwaysAggregateAtRootLevel:this.gos.get("alwaysAggregateAtRootLevel"),groupIncludeTotalFooter:!!this.gos.getGrandTotalRow(),changedPath:e.changedPath,valueColumns:o,pivotColumns:r,filteredOnly:!this.isSuppressAggFilteredOnly(),userAggFunc:this.gos.getCallback("getGroupRowAgg")}}isSuppressAggFilteredOnly(){return this.gos.getGroupAggFiltering()!==void 0||this.gos.get("suppressAggFilteredOnly")}recursivelyCreateAggData(e){const t=o=>{if(!o.hasChildren()){o.aggData&&o.setAggData(null);return}if(o.level===-1&&!e.groupIncludeTotalFooter){const n=!this.columnModel.isPivotMode();if(!e.alwaysAggregateAtRootLevel&&n){o.setAggData(null);return}}this.aggregateRowNode(o,e)};e.changedPath.forEachChangedNodeDepthFirst(t,!0)}aggregateRowNode(e,t){const o=t.valueColumns.length===0,r=t.pivotColumns.length===0;let s;t.userAggFunc?s=t.userAggFunc({nodes:e.childrenAfterFilter}):o?s=null:r?s=this.aggregateRowNodeUsingValuesOnly(e,t):s=this.aggregateRowNodeUsingValuesAndPivot(e),e.setAggData(s),e.sibling&&e.sibling.setAggData(s)}aggregateRowNodeUsingValuesAndPivot(e){const t={},o=this.pivotResultColsService.getPivotResultCols()?.list??[];let r=!0;for(let s=0;s<o.length;s++){const n=o[s],i=n.getColDef();if(i.pivotTotalColumnIds!=null){r=!1;continue}const l=i.pivotKeys??[];let a;e.leafGroup?a=this.getValuesFromMappedSet(e.childrenMapped,l,i.pivotValueColumn):a=this.getValuesPivotNonLeaf(e,i.colId),t[i.colId]=this.aggregateValues(a,i.pivotValueColumn.getAggFunc(),i.pivotValueColumn,e,n)}if(!r)for(let s=0;s<o.length;s++){const n=o[s],i=n.getColDef();if(i.pivotTotalColumnIds==null||!i.pivotTotalColumnIds.length)continue;const l=i.pivotTotalColumnIds.map(a=>t[a]);t[i.colId]=this.aggregateValues(l,i.pivotValueColumn.getAggFunc(),i.pivotValueColumn,e,n)}return t}aggregateRowNodeUsingValuesOnly(e,t){const o={},r=t.changedPath.isActive()?t.changedPath.getValueColumnsForNode(e,t.valueColumns):t.valueColumns,s=t.changedPath.isActive()?t.changedPath.getNotValueColumnsForNode(e,t.valueColumns):null,n=this.getValuesNormal(e,r,t.filteredOnly),i=e.aggData;return r.forEach((l,a)=>{o[l.getId()]=this.aggregateValues(n[a],l.getAggFunc(),l,e)}),s&&i&&s.forEach(l=>{o[l.getId()]=i[l.getId()]}),o}getValuesPivotNonLeaf(e,t){return e.childrenAfterFilter.map(o=>o.aggData[t])}getValuesFromMappedSet(e,t,o){let r=e;for(let s=0;s<t.length;s++){const n=t[s];r=r?r[n]:null}return r?r.map(s=>this.valueService.getValue(o,s)):[]}getValuesNormal(e,t,o){const r=[];t.forEach(()=>r.push([]));const s=t.length,n=o?e.childrenAfterFilter:e.childrenAfterGroup,i=n.length;for(let l=0;l<i;l++){const a=n[l];for(let u=0;u<s;u++){const c=t[u],h=this.valueService.getValue(c,a);r[u].push(h)}}return r}aggregateValues(e,t,o,r,s){const n=typeof t=="string"?this.aggFuncService.getAggFunc(t):t;if(typeof n!="function")return me(`unrecognised aggregation function ${t}`),null;const i=n,l=this.gos.addGridCommonParams({values:e,column:o,colDef:o?o.getColDef():void 0,pivotResultColumn:s,rowNode:r,data:r?r.data:void 0});return i(l)}};import{AgColumn as ve,BeanStub as Ge,GROUP_AUTO_COLUMN_ID as N,_mergeDeep as Fe,_missing as P,_warnOnce as Se}from"@ag-grid-community/core";var we=class extends Ge{constructor(){super(...arguments),this.beanName="autoColService"}wireBeans(e){this.columnModel=e.columnModel,this.columnNameService=e.columnNameService,this.columnFactory=e.columnFactory}createAutoCols(e){const t=[],o=this.gos.get("treeData");let r=this.gos.isGroupMultiAutoColumn();return o&&r&&(Se('you cannot mix groupDisplayType = "multipleColumns" with treeData, only one column can be used to display groups when doing tree data'),r=!1),r?e.forEach((s,n)=>{t.push(this.createOneAutoCol(s,n))}):t.push(this.createOneAutoCol()),t}updateAutoCols(e,t){e.forEach((o,r)=>this.updateOneAutoCol(o,r,t))}createOneAutoCol(e,t){let o;e?o=`${N}-${e.getId()}`:o=N;const r=this.createAutoColDef(o,e,t);r.colId=o;const s=new ve(r,null,o,!0);return this.createBean(s),s}updateOneAutoCol(e,t,o){const r=e.getColDef(),s=typeof r.showRowGroup=="string"?r.showRowGroup:void 0,n=s!=null?this.columnModel.getColDefCol(s):void 0,i=this.createAutoColDef(e.getId(),n??void 0,t);e.setColDef(i,null,o),this.columnFactory.applyColumnState(e,i,o)}createAutoColDef(e,t,o){let r=this.createBaseColDef(t);const s=this.gos.get("autoGroupColumnDef");Fe(r,s),r=this.columnFactory.addColumnDefaultAndTypes(r,e),this.gos.get("treeData")||P(r.field)&&P(r.valueGetter)&&P(r.filterValueGetter)&&r.filter!=="agGroupColumnFilter"&&(r.filter=!1),o&&o>0&&(r.headerCheckboxSelection=!1);const n=this.gos.isColumnsSortingCoupledToGroup(),i=r.valueGetter||r.field!=null;return n&&!i&&(r.sortIndex=void 0,r.initialSort=void 0),r}createBaseColDef(e){const t=this.gos.get("autoGroupColumnDef"),r={headerName:this.localeService.getLocaleTextFunc()("group","Group")};if(t&&(t.cellRenderer||t.cellRendererSelector)||(r.cellRenderer="agGroupCellRenderer"),e){const n=e.getColDef();Object.assign(r,{headerName:this.columnNameService.getDisplayNameForColumn(e,"header"),headerValueGetter:n.headerValueGetter}),n.cellRenderer&&Object.assign(r,{cellRendererParams:{innerRenderer:n.cellRenderer,innerRendererParams:n.cellRendererParams}}),r.showRowGroup=e.getColId()}else r.showRowGroup=!0;return r}};import{BeanStub as ye}from"@ag-grid-community/core";import{Component as Pe,_setAriaRole as Ae}from"@ag-grid-community/core";import{_createIconNoSpan as De}from"@ag-grid-community/core";import{DragSourceType as L}from"@ag-grid-community/core";import{PillDropZonePanel as Re}from"@ag-grid-enterprise/core";import{Component as Me,DragSourceType as Ie,KeyCode as w,RefPlaceholder as Ee,SortIndicatorSelector as Te,_loadTemplate as be}from"@ag-grid-community/core";import{PillDragComp as xe,VirtualList as Ne}from"@ag-grid-enterprise/core";var Le=class extends xe{constructor(e,t,o,r,s){super(t,o,s,`
                <span role="option">
                    <span data-ref="eDragHandle" class="ag-drag-handle ag-column-drop-cell-drag-handle" role="presentation"></span>
                    <span data-ref="eText" class="ag-column-drop-cell-text" aria-hidden="true"></span>
                    <ag-sort-indicator data-ref="eSortIndicator"></ag-sort-indicator>
                    <span data-ref="eButton" class="ag-column-drop-cell-button" role="presentation"></span>
                </span>
            `,[Te]),this.column=e,this.dropZonePurpose=r,this.eSortIndicator=Ee,this.popupShowing=!1}wireBeans(e){super.wireBeans(e),this.popupService=e.popupService,this.sortController=e.sortController,this.columnModel=e.columnModel,this.columnNameService=e.columnNameService,this.funcColsService=e.funcColsService,this.aggFuncService=e.aggFuncService}postConstruct(){this.displayName=this.columnNameService.getDisplayNameForColumn(this.column,"columnDrop"),super.postConstruct(),this.setupSort(),this.addManagedEventListeners({sortChanged:()=>{this.setupAria()}}),this.isGroupingZone()&&this.addManagedPropertyListener("groupLockGroupColumns",()=>{this.refreshRemove(),this.refreshDraggable(),this.setupAria()})}getItem(){return this.column}getDisplayName(){return this.displayName}getTooltip(){return this.column.getColDef().headerTooltip}addAdditionalAriaInstructions(e,t){const o=this.gos.get("rowGroupPanelSuppressSort"),r=this.gos.get("functionsReadOnly");if(this.isAggregationZone()&&!r){const s=t("ariaDropZoneColumnValueItemDescription","Press ENTER to change the aggregation type");e.push(s)}if(this.isGroupingZone()&&this.column.isSortable()&&!o){const s=t("ariaDropZoneColumnGroupItemDescription","Press ENTER to sort");e.push(s)}super.addAdditionalAriaInstructions(e,t)}isDraggable(){return this.isReadOnly()}isRemovable(){return this.isReadOnly()}isReadOnly(){return!this.isGroupingAndLocked()&&!this.gos.get("functionsReadOnly")}getAriaDisplayName(){const e=this.localeService.getLocaleTextFunc(),{name:t,aggFuncName:o}=this.getColumnAndAggFuncName(),r=e("ariaDropZoneColumnComponentAggFuncSeparator"," of "),s={asc:e("ariaDropZoneColumnComponentSortAscending","ascending"),desc:e("ariaDropZoneColumnComponentSortDescending","descending")},n=this.column.getSort(),i=this.gos.get("rowGroupPanelSuppressSort");return[o&&`${o}${r}`,t,this.isGroupingZone()&&!i&&n&&`, ${s[n]}`].filter(l=>!!l).join("")}getColumnAndAggFuncName(){const e=this.displayName;let t="";if(this.isAggregationZone()){const o=this.column.getAggFunc(),r=typeof o=="string"?o:"agg";t=this.localeService.getLocaleTextFunc()(r,r)}return{name:e,aggFuncName:t}}setupSort(){const e=this.column.isSortable(),t=this.isGroupingZone();if(!(!e||!t)&&!this.gos.get("rowGroupPanelSuppressSort")){this.eSortIndicator.setupSort(this.column,!0);const o=r=>{r.preventDefault();const n=this.gos.get("multiSortKey")==="ctrl"?r.ctrlKey||r.metaKey:r.shiftKey;this.sortController.progressSort(this.column,n,"uiColumnSorted")};this.addGuiEventListener("click",o),this.addGuiEventListener("keydown",r=>{r.key===w.ENTER&&this.isGroupingZone()&&o(r)})}}getDefaultIconName(){return"hide"}createGetDragItem(){const{column:e}=this;return()=>{const t={};return t[e.getId()]=e.isVisible(),{columns:[e],visibleState:t}}}setupComponents(){super.setupComponents(),this.isAggregationZone()&&!this.gos.get("functionsReadOnly")&&this.addGuiEventListener("click",this.onShowAggFuncSelection.bind(this))}onKeyDown(e){super.onKeyDown(e),e.key===w.ENTER&&this.isAggregationZone()&&!this.gos.get("functionsReadOnly")&&(e.preventDefault(),this.onShowAggFuncSelection())}getDisplayValue(){const{name:e,aggFuncName:t}=this.getColumnAndAggFuncName();return this.isAggregationZone()?`${t}(${e})`:e}onShowAggFuncSelection(){if(this.popupShowing)return;this.popupShowing=!0;const e=new Ne({cssIdentifier:"select-agg-func"}),t=this.aggFuncService.getFuncNames(this.column),o=this.getGui(),r=e.getGui();e.setModel({getRow:function(c){return t[c]},getRowCount:function(){return t.length}}),this.createBean(e);const s=be('<div class="ag-select-agg-func-popup"></div>');s.style.top="0px",s.style.left="0px",s.appendChild(r),s.style.width=`${o.clientWidth}px`;const[n]=this.addManagedElementListeners(s,{focusout:c=>{!s.contains(c.relatedTarget)&&a&&a.hideFunc()}}),i=c=>{this.destroyBean(e),this.popupShowing=!1,c?.key==="Escape"&&o.focus(),n&&n()},l=this.localeService.getLocaleTextFunc(),a=this.popupService.addPopup({modal:!0,eChild:s,closeOnEsc:!0,closedCallback:i,ariaLabel:l("ariaLabelAggregationFunction","Aggregation Function")});a&&e.setComponentCreator(this.createAggSelect.bind(this,a.hideFunc)),e.addGuiEventListener("keydown",c=>{if(c.key===w.ENTER||c.key===w.SPACE){const h=e.getLastFocusedRow();if(h==null)return;const d=e.getComponentAt(h);d&&d.selectItem()}}),this.popupService.positionPopupByComponent({type:"aggFuncSelect",eventSource:o,ePopup:s,keepWithinBounds:!0,column:this.column,position:"under"}),e.refresh();let u=t.findIndex(c=>c===this.column.getAggFunc());u===-1&&(u=0),e.focusRow(u)}createAggSelect(e,t){const o=()=>{e(),this.funcColsService.setColumnAggFunc(this.column,t,"toolPanelDragAndDrop")},r=this.localeService.getLocaleTextFunc(),s=t.toString(),n=r(s,s);return new Ve(o,n)}isGroupingAndLocked(){return this.isGroupingZone()&&this.columnModel.isColGroupLocked(this.column)}isAggregationZone(){return this.dropZonePurpose==="aggregation"}isGroupingZone(){return this.dropZonePurpose==="rowGroup"}getDragSourceType(){return Ie.ToolPanel}destroy(){super.destroy(),this.column=null}},Ve=class extends Me{constructor(e,t){super('<div class="ag-select-agg-func-item"/>'),this.selectItem=e,this.getGui().innerText=t,this.addGuiEventListener("click",this.selectItem)}},A=class extends Re{constructor(e,t){super(e),this.dropZonePurpose=t}wireBeans(e){super.wireBeans(e),this.columnModel=e.columnModel,this.funcColsService=e.funcColsService}init(e){super.init(e),this.addManagedEventListeners({newColumnsLoaded:this.refreshGui.bind(this)}),this.addManagedPropertyListeners(["functionsReadOnly","rowGroupPanelSuppressSort","groupLockGroupColumns"],this.refreshGui.bind(this))}getItems(e){return e.columns??[]}isInterestedIn(e){return e===L.HeaderCell||e===L.ToolPanel}minimumAllowedNewInsertIndex(){const e=this.gos.get("groupLockGroupColumns"),t=this.funcColsService.getRowGroupColumns().length;return e===-1?t:Math.min(e,t)}showOrHideColumnOnExit(e){return this.isRowGroupPanel()&&!this.gos.get("suppressRowGroupHidesColumns")&&!e.fromNudge}handleDragEnterEnd(e){if(this.showOrHideColumnOnExit(e)){const r=e.dragSource.getDragItem().columns;this.setColumnsVisible(r,!1,"uiColumnDragged")}}handleDragLeaveEnd(e){if(this.showOrHideColumnOnExit(e)){const o=e.dragSource.getDragItem();this.setColumnsVisible(o.columns,!0,"uiColumnDragged")}}setColumnsVisible(e,t,o){if(e){const r=e.filter(s=>!s.getColDef().lockVisible);this.columnModel.setColsVisible(r,t,o)}}isRowGroupPanel(){return this.dropZonePurpose==="rowGroup"}createPillComponent(e,t,o,r){return new Le(e,t,o,this.dropZonePurpose,r)}},V=class extends A{constructor(e){super(e,"pivot")}postConstruct(){const e=this.localeService.getLocaleTextFunc(),t=e("pivotColumnsEmptyMessage","Drag here to set column labels"),o=e("pivots","Column Labels");super.init({icon:De("pivotPanel",this.gos,null),emptyMessage:t,title:o}),this.addManagedEventListeners({newColumnsLoaded:this.refresh.bind(this),columnPivotChanged:this.refresh.bind(this),columnPivotModeChanged:this.checkVisibility.bind(this)}),this.refresh()}getAriaLabel(){return this.localeService.getLocaleTextFunc()("ariaPivotDropZonePanelLabel","Column Labels")}getTooltipParams(){const e=super.getTooltipParams();return e.location="pivotColumnsList",e}refresh(){this.checkVisibility(),this.refreshGui()}checkVisibility(){const e=this.columnModel.isPivotMode();if(this.isHorizontal())switch(this.gos.get("pivotPanelShow")){case"always":this.setDisplayed(e);break;case"onlyWhenPivoting":{const t=this.columnModel.isPivotActive();this.setDisplayed(e&&t);break}default:this.setDisplayed(!1);break}else this.setDisplayed(e)}isItemDroppable(e,t){return this.gos.get("functionsReadOnly")||!e.isPrimary()?!1:e.isAllowPivot()&&(!e.isPivotActive()||this.isSourceEventFromTarget(t))}updateItems(e){this.funcColsService.setPivotColumns(e,"toolPanelUi")}getIconName(){return this.isPotentialDndItems()?"pivot":"notAllowed"}getExistingItems(){return this.funcColsService.getPivotColumns()}};import{_createIconNoSpan as Oe}from"@ag-grid-community/core";var O=class extends A{constructor(e){super(e,"rowGroup")}postConstruct(){const e=this.localeService.getLocaleTextFunc(),t=e("rowGroupColumnsEmptyMessage","Drag here to set row groups"),o=e("groups","Row Groups");super.init({icon:Oe("rowGroupPanel",this.gos,null),emptyMessage:t,title:o}),this.addManagedEventListeners({columnRowGroupChanged:this.refreshGui.bind(this)})}getAriaLabel(){return this.localeService.getLocaleTextFunc()("ariaRowGroupDropZonePanelLabel","Row Groups")}getTooltipParams(){const e=super.getTooltipParams();return e.location="rowGroupColumnsList",e}isItemDroppable(e,t){return this.gos.get("functionsReadOnly")||!e.isPrimary()?!1:e.isAllowRowGroup()&&(!e.isRowGroupActive()||this.isSourceEventFromTarget(t))}updateItems(e){this.funcColsService.setRowGroupColumns(e,"toolPanelUi")}getIconName(){return this.isPotentialDndItems()?"group":"notAllowed"}getExistingItems(){return this.funcColsService.getRowGroupColumns()}},ke=class extends Pe{wireBeans(e){this.columnModel=e.columnModel,this.funcColsService=e.funcColsService}constructor(){super()}postConstruct(){this.setGui(this.createNorthPanel());const e=this.onRowGroupChanged.bind(this);this.addManagedEventListeners({columnRowGroupChanged:e,newColumnsLoaded:e}),this.addManagedPropertyListener("rowGroupPanelShow",e),this.addManagedPropertyListener("pivotPanelShow",()=>this.onPivotPanelShow()),this.onRowGroupChanged()}createNorthPanel(){const e=document.createElement("div");e.classList.add("ag-column-drop-wrapper"),Ae(e,"presentation"),this.rowGroupComp=new O(!0),this.createManagedBean(this.rowGroupComp),this.pivotComp=new V(!0),this.createManagedBean(this.pivotComp),e.appendChild(this.rowGroupComp.getGui()),e.appendChild(this.pivotComp.getGui());const t=this.onDropPanelVisible.bind(this);return this.addManagedListeners(this.rowGroupComp,{displayChanged:t}),this.addManagedListeners(this.pivotComp,{displayChanged:t}),this.onDropPanelVisible(),e}onDropPanelVisible(){const e=this.rowGroupComp.isDisplayed()&&this.pivotComp.isDisplayed(),t="ag-column-drop-horizontal-half-width";this.rowGroupComp.addOrRemoveCssClass(t,e),this.pivotComp.addOrRemoveCssClass(t,e)}onRowGroupChanged(){if(!this.rowGroupComp)return;const e=this.gos.get("rowGroupPanelShow");if(e==="always")this.rowGroupComp.setDisplayed(!0);else if(e==="onlyWhenGrouping"){const t=!this.funcColsService.isRowGroupEmpty();this.rowGroupComp.setDisplayed(t)}else this.rowGroupComp.setDisplayed(!1)}onPivotPanelShow(){if(!this.pivotComp)return;const e=this.gos.get("pivotPanelShow");if(e==="always")this.pivotComp.setDisplayed(!0);else if(e==="onlyWhenPivoting"){const t=this.columnModel.isPivotActive();this.pivotComp.setDisplayed(t)}else this.pivotComp.setDisplayed(!1)}},Be={selector:"AG-GRID-HEADER-DROP-ZONES",component:ke},_e=class extends ye{constructor(){super(...arguments),this.beanName="columnDropZonesService"}getDropZoneSelector(){return Be}};import{BeanStub as Ue}from"@ag-grid-community/core";var Ze=class extends Ue{constructor(){super(...arguments),this.beanName="filterAggregatesStage"}wireBeans(e){this.filterManager=e.filterManager,this.columnModel=e.columnModel}execute(e){const t=this.columnModel.isPivotMode(),o=this.filterManager?.isAggregateFilterPresent()||this.filterManager?.isAggregateQuickFilterPresent(),r=u=>!u.node.group,s=u=>u.node.leafGroup,n=this.gos.getGroupAggFiltering()||(t?s:r),{changedPath:i}=e,l=(u,c=!1)=>{u.childrenAfterFilter&&(u.childrenAfterAggFilter=u.childrenAfterFilter,c&&u.childrenAfterAggFilter.forEach(h=>l(h,c)),this.setAllChildrenCount(u)),u.sibling&&(u.sibling.childrenAfterAggFilter=u.childrenAfterAggFilter)},a=u=>{u.childrenAfterAggFilter=u.childrenAfterFilter?.filter(c=>n({node:c})&&this.filterManager.doesRowPassAggregateFilters({rowNode:c})?(l(c,!0),!0):c.childrenAfterAggFilter?.length)||null,this.setAllChildrenCount(u),u.sibling&&(u.sibling.childrenAfterAggFilter=u.childrenAfterAggFilter)};i.forEachChangedNodeDepthFirst(o?a:l,!0)}setAllChildrenCountTreeData(e){let t=0;e.childrenAfterAggFilter.forEach(o=>{t++,t+=o.allChildrenCount}),e.setAllChildrenCount(t)}setAllChildrenCountGridGrouping(e){let t=0;e.childrenAfterAggFilter.forEach(o=>{o.group?t+=o.allChildrenCount:t++}),e.setAllChildrenCount(t)}setAllChildrenCount(e){if(!e.hasChildren()){e.setAllChildrenCount(null);return}this.gos.get("treeData")?this.setAllChildrenCountTreeData(e):this.setAllChildrenCountGridGrouping(e)}};import{AgPromise as f,AgSelect as He,FilterWrapperComp as $e,RefPlaceholder as k,TabGuardComp as We,_clearElement as D,_loadTemplate as Ke,_setDisplayed as R,_warnOnce as v}from"@ag-grid-community/core";var qe=class extends We{constructor(){super(`
            <div class="ag-group-filter">
                <div data-ref="eGroupField"></div>
                <div data-ref="eUnderlyingFilter"></div>
            </div>
        `),this.eGroupField=k,this.eUnderlyingFilter=k}wireBeans(e){this.filterManager=e.filterManager,this.columnNameService=e.columnNameService,this.funcColsService=e.funcColsService}postConstruct(){this.initialiseTabGuard({})}init(e){return this.updateParams(e).then(()=>{this.addManagedEventListeners({columnRowGroupChanged:()=>this.onColumnRowGroupChanged(),filterDestroyed:t=>this.onFilterDestroyed(t)})})}refresh(e){return this.updateParams(e),!0}updateParams(e){return this.params=e,this.validateParams(),this.updateGroups()}validateParams(){const{colDef:e}=this.params;e.field&&v('Group Column Filter does not work with the colDef property "field". This property will be ignored.'),e.filterValueGetter&&v('Group Column Filter does not work with the colDef property "filterValueGetter". This property will be ignored.'),e.filterParams&&v('Group Column Filter does not work with the colDef property "filterParams". This property will be ignored.')}updateGroups(){const e=this.updateGroupField();return this.getUnderlyingFilters(e)}getSourceColumns(){if(this.groupColumn=this.params.column,this.gos.get("treeData"))return v("Group Column Filter does not work with Tree Data enabled. Please disable Tree Data, or use a different filter."),[];const e=this.funcColsService.getSourceColumnsForGroupColumn(this.groupColumn);return e||(v("Group Column Filter only works on group columns. Please use a different filter."),[])}updateGroupField(){D(this.eGroupField),this.eGroupFieldSelect&&this.destroyBean(this.eGroupFieldSelect);const e=this.getSourceColumns(),t=e.filter(o=>o.isFilterAllowed());return t.length?(e.length===1?(this.selectedColumn=t[0],R(this.eGroupField,!1)):((!this.selectedColumn||!t.some(o=>o.getId()===this.selectedColumn.getId()))&&(this.selectedColumn=t[0]),this.createGroupFieldSelectElement(t),this.eGroupField.appendChild(this.eGroupFieldSelect.getGui()),this.eGroupField.appendChild(Ke('<div class="ag-filter-separator"></div>')),R(this.eGroupField,!0)),t):(this.selectedColumn=void 0,R(this.eGroupField,!1),null)}createGroupFieldSelectElement(e){this.eGroupFieldSelect=this.createManagedBean(new He);const t=this.localeService.getLocaleTextFunc();this.eGroupFieldSelect.setLabel(t("groupFilterSelect","Select field:")),this.eGroupFieldSelect.setLabelAlignment("top"),this.eGroupFieldSelect.addOptions(e.map(o=>({value:o.getId(),text:this.columnNameService.getDisplayNameForColumn(o,"groupFilter",!1)??void 0}))),this.eGroupFieldSelect.setValue(this.selectedColumn.getId()),this.eGroupFieldSelect.onValueChange(o=>this.updateSelectedColumn(o)),this.eGroupFieldSelect.addCssClass("ag-group-filter-field-select-wrapper"),e.length===1&&this.eGroupFieldSelect.setDisabled(!0)}getUnderlyingFilters(e){if(!e)return this.filterColumnPairs=void 0,this.selectedFilter=void 0,this.groupColumn.setFilterActive(!1,"columnRowGroupChanged"),f.resolve();const t=[],o=[];return e.forEach(r=>{const s=this.filterManager.getOrCreateFilterWrapper(r);s?.filterPromise&&t.push(s.filterPromise.then(n=>(n&&o.push({filter:n,column:r}),r.getId()===this.selectedColumn.getId()&&(this.selectedFilter=n??void 0),n)))}),f.all(t).then(()=>{this.filterColumnPairs=o,this.groupColumn.setFilterActive(this.isFilterActive(),"columnRowGroupChanged")})}addUnderlyingFilterElement(){if(D(this.eUnderlyingFilter),!this.selectedColumn)return f.resolve();const e=this.createManagedBean(new $e(this.selectedColumn,"COLUMN_MENU"));return this.filterWrapperComp=e,e.hasFilter()?(this.eUnderlyingFilter.appendChild(e.getGui()),e.getFilter()?.then(()=>{e.afterGuiAttached?.(this.afterGuiAttachedParams),!this.afterGuiAttachedParams?.suppressFocus&&this.eGroupFieldSelect&&!this.eGroupFieldSelect.isDisabled()&&this.eGroupFieldSelect.getFocusableElement().focus()})??f.resolve()):f.resolve()}updateSelectedColumn(e){if(!e)return;this.filterWrapperComp?.afterGuiDetached(),this.destroyBean(this.filterWrapperComp);const t=this.getFilterColumnPair(e);this.selectedColumn=t?.column,this.selectedFilter=t?.filter,this.dispatchLocalEvent({type:"selectedColumnChanged"}),this.addUnderlyingFilterElement()}isFilterActive(){return!!this.filterColumnPairs?.some(({filter:e})=>e.isFilterActive())}doesFilterPass(){return!0}getModel(){return null}setModel(){return f.resolve()}afterGuiAttached(e){this.afterGuiAttachedParams=e,this.addUnderlyingFilterElement()}afterGuiDetached(){D(this.eUnderlyingFilter),this.selectedFilter?.afterGuiDetached?.()}onColumnRowGroupChanged(){this.updateGroups().then(()=>{this.dispatchLocalEvent({type:"columnRowGroupChanged"})})}onFilterDestroyed({column:e,source:t}){if(t==="gridDestroyed")return;const o=e.getColId();this.filterColumnPairs?.some(({column:r})=>r.getColId()===o)&&setTimeout(()=>{this.updateGroups()})}getFilterColumnPair(e){if(e)return this.filterColumnPairs?.find(({column:t})=>t.getId()===e)}getSelectedFilter(){return this.selectedFilter}getSelectedColumn(){return this.selectedColumn}isFilterAllowed(){return!!this.selectedColumn}destroy(){super.destroy()}};import{AgInputTextField as je,AgPromise as B,Component as Xe,RefPlaceholder as ze,_clearElement as Je}from"@ag-grid-community/core";var Qe=class extends Xe{constructor(){super(`
            <div data-ref="eFloatingFilter" class="ag-group-floating-filter ag-floating-filter-input" role="presentation"></div>
        `),this.eFloatingFilter=ze,this.haveAddedColumnListeners=!1}wireBeans(e){this.columnNameService=e.columnNameService,this.filterManager=e.filterManager}init(e){this.params=e;const t=this.gos.get("groupDisplayType")==="multipleColumns";return new B(o=>{this.params.parentFilterInstance(r=>{this.parentFilterInstance=r,t?this.setupUnderlyingFloatingFilterElement().then(()=>o()):(this.setupReadOnlyFloatingFilterElement(),o())})}).then(()=>{this.addManagedListeners(this.parentFilterInstance,{selectedColumnChanged:this.onSelectedColumnChanged.bind(this),columnRowGroupChanged:this.onColumnRowGroupChanged.bind(this)})})}onParamsUpdated(e){this.refresh(e)}refresh(e){this.params=e,this.setParams()}setParams(){const e=this.columnNameService.getDisplayNameForColumn(this.params.column,"header",!0),t=this.localeService.getLocaleTextFunc();this.eFloatingFilterText?.setInputAriaLabel(`${e} ${t("ariaFilterInput","Filter Input")}`)}setupReadOnlyFloatingFilterElement(){this.eFloatingFilterText||(this.eFloatingFilterText=this.createManagedBean(new je),this.eFloatingFilterText.setDisabled(!0).addGuiEventListener("click",()=>this.params.showParentFilter()),this.setParams()),this.updateDisplayedValue(),this.eFloatingFilter.appendChild(this.eFloatingFilterText.getGui())}setupUnderlyingFloatingFilterElement(){this.showingUnderlyingFloatingFilter=!1,this.underlyingFloatingFilter=void 0,Je(this.eFloatingFilter);const e=this.parentFilterInstance.getSelectedColumn();if(e&&!e.isVisible()){const t=this.filterManager.getFloatingFilterCompDetails(e,this.params.showParentFilter);if(t)return this.haveAddedColumnListeners||(this.haveAddedColumnListeners=!0,this.addManagedListeners(e,{visibleChanged:this.onColumnVisibleChanged.bind(this),colDefChanged:this.onColDefChanged.bind(this)})),t.newAgStackInstance().then(o=>{this.underlyingFloatingFilter=o,this.underlyingFloatingFilter?.onParentModelChanged(this.parentFilterInstance.getSelectedFilter()?.getModel()),this.appendChild(o.getGui()),this.showingUnderlyingFloatingFilter=!0})}return this.setupReadOnlyFloatingFilterElement(),B.resolve()}onColumnVisibleChanged(){this.setupUnderlyingFloatingFilterElement()}onColDefChanged(e){if(!e.column)return;const t=this.filterManager.getFloatingFilterCompDetails(e.column,this.params.showParentFilter);t&&(this.underlyingFloatingFilter?.refresh?this.underlyingFloatingFilter.refresh(t.params):this.underlyingFloatingFilter?.onParamsUpdated?.(t.params))}onParentModelChanged(e,t){this.showingUnderlyingFloatingFilter?this.underlyingFloatingFilter?.onParentModelChanged(this.parentFilterInstance.getSelectedFilter()?.getModel(),t):this.updateDisplayedValue()}updateDisplayedValue(){if(!this.parentFilterInstance||!this.eFloatingFilterText)return;const e=this.parentFilterInstance.getSelectedFilter();if(!e){this.eFloatingFilterText.setValue(""),this.eFloatingFilterText.setDisplayed(!1);return}if(this.eFloatingFilterText.setDisplayed(!0),e.getModelAsString){const t=e.getModel();this.eFloatingFilterText.setValue(t==null?"":e.getModelAsString(t))}else this.eFloatingFilterText.setValue("")}onSelectedColumnChanged(){this.showingUnderlyingFloatingFilter||this.updateDisplayedValue()}onColumnRowGroupChanged(){this.showingUnderlyingFloatingFilter||this.updateDisplayedValue()}destroy(){super.destroy()}};import{BeanStub as Ye}from"@ag-grid-community/core";import{BeanStub as et,RowNode as _,_areEqual as M,_exists as U,_existsAndNotEmpty as I,_removeFromArray as tt,_sortRowNodesByOrder as ot,_warnOnce as rt}from"@ag-grid-community/core";var G=class{constructor(){this.allSets={},this.allParents=[]}removeFromChildrenAfterGroup(e,t){const o=this.getSet(e);o.removeFromChildrenAfterGroup[t.id]=!0}isRemoveFromAllLeafChildren(e,t){return!!this.getSet(e).removeFromAllLeafChildren[t.id]}preventRemoveFromAllLeafChildren(e,t){const o=this.getSet(e);delete o.removeFromAllLeafChildren[t.id]}removeFromAllLeafChildren(e,t){const o=this.getSet(e);o.removeFromAllLeafChildren[t.id]=!0}getSet(e){return this.allSets[e.id]||(this.allSets[e.id]={removeFromAllLeafChildren:{},removeFromChildrenAfterGroup:{}},this.allParents.push(e)),this.allSets[e.id]}getAllParents(){return this.allParents}flush(){this.allParents.forEach(e=>{const t=this.allSets[e.id];e.childrenAfterGroup=e.childrenAfterGroup.filter(o=>!t.removeFromChildrenAfterGroup[o.id]),e.allLeafChildren=e.allLeafChildren?.filter(o=>!t.removeFromAllLeafChildren[o.id])??null,e.updateHasChildren(),e.sibling&&(e.sibling.childrenAfterGroup=e.childrenAfterGroup,e.sibling.allLeafChildren=e.allLeafChildren)}),this.allSets={},this.allParents.length=0}},st=class extends et{wireBeans(e){this.beans=e,this.columnModel=e.columnModel,this.funcColsService=e.funcColsService,this.valueService=e.valueService,this.selectionService=e.selectionService,this.showRowGroupColsService=e.showRowGroupColsService}execute(e){const t=this.createGroupingDetails(e);if(t.transactions)this.handleTransaction(t);else{const o=e.afterColumnsChanged===!0;this.shotgunResetEverything(t,o)}this.positionLeafsAndGroups(e.changedPath),this.orderGroups(t)}positionLeafsAndGroups(e){e.forEachChangedNodeDepthFirst(t=>{if(t.childrenAfterGroup){const o=[],r=[];let s;t.childrenAfterGroup.forEach(n=>{n.childrenAfterGroup?.length?n.key===""&&!s?s=n:r.push(n):o.push(n)}),s&&r.push(s),t.childrenAfterGroup=[...o,...r]}},!1)}createGroupingDetails(e){const{rowNode:t,changedPath:o,rowNodeTransactions:r,rowNodeOrder:s}=e,n=this.funcColsService.getRowGroupColumns();return{expandByDefault:this.gos.get("groupDefaultExpanded"),groupedCols:n,rootNode:t,pivotMode:this.columnModel.isPivotMode(),groupedColCount:n?.length??0,rowNodeOrder:s,transactions:r,changedPath:o,groupAllowUnbalanced:this.gos.get("groupAllowUnbalanced"),isGroupOpenByDefault:this.gos.getCallback("isGroupOpenByDefault"),initialGroupOrderComparator:this.gos.getCallback("initialGroupOrderComparator"),suppressGroupMaintainValueType:this.gos.get("suppressGroupMaintainValueType"),keyCreators:n?.map(l=>l.getColDef().keyCreator)??[]}}handleTransaction(e){e.transactions.forEach(t=>{const o=new G;I(t.remove)&&this.removeNodes(t.remove,e,o),I(t.update)&&this.moveNodesInWrongPath(t.update,e,o),I(t.add)&&this.insertNodes(t.add,e);const r=o.getAllParents().slice();o.flush(),this.removeEmptyGroups(r,e)}),e.rowNodeOrder&&this.sortChildren(e)}sortChildren(e){e.changedPath.forEachChangedNodeDepthFirst(t=>{ot(t.childrenAfterGroup,e.rowNodeOrder)&&e.changedPath.addParentNode(t)},!1,!0)}orderGroups(e){const t=e.initialGroupOrderComparator;U(t)&&o(e.rootNode);function o(r){U(r.childrenAfterGroup)&&!r.leafGroup&&(r.childrenAfterGroup.sort((n,i)=>t({nodeA:n,nodeB:i})),r.childrenAfterGroup.forEach(n=>o(n)))}}getExistingPathForNode(e,t){const o=[];let r=e.parent;for(;r&&r!==t.rootNode;)o.push({key:r.key,rowGroupColumn:r.rowGroupColumn,field:r.field}),r=r.parent;return o.reverse(),o}moveNodesInWrongPath(e,t,o){e.forEach(r=>{t.changedPath.isActive()&&t.changedPath.addParentNode(r.parent);const s=a=>a.key,n=this.getExistingPathForNode(r,t).map(s),i=this.getGroupInfo(r,t).map(s);M(n,i)||this.moveNode(r,t,o)})}moveNode(e,t,o){if(this.removeNodesFromParents([e],t,o),this.insertOneNode(e,t,o),e.setData(e.data),t.changedPath.isActive()){const r=e.parent;t.changedPath.addParentNode(r)}}removeNodes(e,t,o){this.removeNodesFromParents(e,t,o),t.changedPath.isActive()&&e.forEach(r=>t.changedPath.addParentNode(r.parent))}forEachParentGroup(e,t,o){let r=t;for(;r&&r!==e.rootNode;)o(r),r=r.parent}removeNodesFromParents(e,t,o){const r=o==null,s=o||new G;e.forEach(n=>{this.removeFromParent(n,s),this.forEachParentGroup(t,n.parent,i=>{s.removeFromAllLeafChildren(i,n)})}),r&&s.flush()}removeEmptyGroups(e,t){let o=!0;const r=s=>{const n=this.getChildrenMappedKey(s.key,s.rowGroupColumn),i=s.parent;return(i?.childrenMapped?!i.childrenMapped[n]:!0)?!1:s.isEmptyRowGroupNode()};for(;o;){o=!1;const s=new G;e.forEach(n=>{this.forEachParentGroup(t,n,i=>{r(i)&&(o=!0,this.removeFromParent(i,s),i.setSelectedParams({newValue:!1,source:"rowGroupChanged"}))})}),s.flush()}}removeFromParent(e,t){e.parent&&(t?t.removeFromChildrenAfterGroup(e.parent,e):(tt(e.parent.childrenAfterGroup,e),e.parent.updateHasChildren()));const o=this.getChildrenMappedKey(e.key,e.rowGroupColumn);e.parent?.childrenMapped!=null&&delete e.parent.childrenMapped[o],e.setRowTop(null),e.setRowIndex(null)}addToParent(e,t){const o=this.getChildrenMappedKey(e.key,e.rowGroupColumn);t?.childrenMapped!=null&&t?.childrenMapped?.[o]!==e&&(t.childrenMapped[o]=e,t.childrenAfterGroup.push(e),t.setGroup(!0))}areGroupColsEqual(e,t){return e==null||t==null||e.pivotMode!==t.pivotMode?!1:M(e.groupedCols,t.groupedCols)&&M(e.keyCreators,t.keyCreators)}checkAllGroupDataAfterColsChanged(e){const t=o=>{o&&o.forEach(r=>{if(!r.group)return;const n={field:r.field,key:r.key,rowGroupColumn:r.rowGroupColumn,leafNode:r.allLeafChildren?.[0]};this.setGroupData(r,n,e),t(r.childrenAfterGroup)})};t(e.rootNode.childrenAfterGroup)}shotgunResetEverything(e,t){if(this.noChangeInGroupingColumns(e,t))return;this.selectionService.filterFromSelection(n=>n&&!n.group);const{rootNode:o,groupedCols:r}=e;o.leafGroup=r.length===0,o.childrenAfterGroup=[],o.childrenMapped={},o.updateHasChildren();const s=o.sibling;s&&(s.childrenAfterGroup=o.childrenAfterGroup,s.childrenMapped=o.childrenMapped),this.insertNodes(o.allLeafChildren,e)}noChangeInGroupingColumns(e,t){let o=!1;const r=this.showRowGroupColsService.getShowRowGroupCols(),s=r?r.map(n=>n.getId()).join("-"):"";return t&&(o=this.areGroupColsEqual(e,this.oldGroupingDetails),this.oldGroupDisplayColIds!==s&&this.checkAllGroupDataAfterColsChanged(e)),this.oldGroupingDetails=e,this.oldGroupDisplayColIds=s,o}insertNodes(e,t){e.forEach(o=>{this.insertOneNode(o,t),t.changedPath.isActive()&&t.changedPath.addParentNode(o.parent)})}insertOneNode(e,t,o){const r=this.getGroupInfo(e,t),s=this.findParentForNode(e,r,t,o);s.group||rt("duplicate group keys for row data, keys should be unique",[s.data,e.data]),e.parent=s,e.level=r.length,s.childrenAfterGroup.push(e),s.updateHasChildren()}findParentForNode(e,t,o,r){let s=o.rootNode;return t.forEach((n,i)=>{s=this.getOrCreateNextNode(s,t,n,i,o),r?.isRemoveFromAllLeafChildren(s,e)?r?.preventRemoveFromAllLeafChildren(s,e):s.allLeafChildren.push(e)}),s}getOrCreateNextNode(e,t,o,r,s){const n=this.getChildrenMappedKey(o.key,o.rowGroupColumn);let i=e?.childrenMapped?.[n];return i||(i=this.createGroup(o,e,r,s),this.addToParent(i,e)),i}createGroup(e,t,o,r){const s=new _(this.beans);return s.group=!0,s.field=e.field,s.rowGroupColumn=e.rowGroupColumn,this.setGroupData(s,e,r),s.key=e.key,s.id=this.createGroupId(s,t,o),s.level=o,s.leafGroup=o===r.groupedColCount-1,s.allLeafChildren=[],s.setAllChildrenCount(0),s.rowGroupIndex=o,s.childrenAfterGroup=[],s.childrenMapped={},s.updateHasChildren(),s.parent=t,this.setExpandedInitialValue(r,s),s}createGroupId(e,t,o){const r=(s,n)=>{if(!s.rowGroupColumn)return null;const i=n?r(n,n.parent,0):null;return`${i==null?"":i+"-"}${s.rowGroupColumn.getColId()}-${s.key}`};return _.ID_PREFIX_ROW_GROUP+r(e,t,o)}setGroupData(e,t,o){e.groupData={},this.showRowGroupColsService.getShowRowGroupCols().forEach(s=>{const n=e.rowGroupColumn;n!==null&&s.isRowGroupDisplayed(n.getId())&&(o.suppressGroupMaintainValueType?e.groupData[s.getColId()]=t.key:e.groupData[s.getColId()]=this.valueService.getValue(n,t.leafNode))})}getChildrenMappedKey(e,t){return t?t.getId()+"-"+e:e}setExpandedInitialValue(e,t){if(e.pivotMode&&t.leafGroup){t.expanded=!1;return}const o=e.isGroupOpenByDefault;if(o){const r={rowNode:t,field:t.field,key:t.key,level:t.level,rowGroupColumn:t.rowGroupColumn};t.expanded=o(r)==!0;return}if(e.expandByDefault===-1){t.expanded=!0;return}t.expanded=t.level<e.expandByDefault}getGroupInfo(e,t){const o=[];return t.groupedCols.forEach(r=>{let s=this.valueService.getKeyForNode(r,e),n=s!=null&&s!=="";if((t.pivotMode||!t.groupAllowUnbalanced)&&!n&&(s="",n=!0),n){const l={key:s,field:r.getColDef().field,rowGroupColumn:r,leafNode:e};o.push(l)}}),o}};import{BeanStub as nt,RowNode as Z,_removeFromArray as it,_sortRowNodesByOrder as lt,_warnOnce as at}from"@ag-grid-community/core";var ut=class q{constructor(t){this.map=null,this.row=null,this.key=t}upsert(t){let o,r=this.map;return r?o=r.get(t):(r=new Map,this.map=r),o||(o=new q(t),r.set(t,o)),o}},ct=class extends nt{constructor(){super(...arguments),this.root=new ut("")}wireBeans(e){this.beans=e,this.selectionService=e.selectionService,this.showRowGroupColsService=e.showRowGroupColsService}execute(e){const{rowNode:t,changedPath:o,rowNodeTransactions:r,rowNodeOrder:s}=e,n={expandByDefault:this.gos.get("groupDefaultExpanded"),rowNodeOrder:s,transactions:r,changedPath:o,isGroupOpenByDefault:this.gos.getCallback("isGroupOpenByDefault"),initialGroupOrderComparator:this.gos.getCallback("initialGroupOrderComparator"),suppressGroupMaintainValueType:this.gos.get("suppressGroupMaintainValueType"),getDataPath:this.gos.get("getDataPath")},i=this.root.row;if(i!==t&&(this.root.row=t,i&&this.root.map?.clear()),n.transactions)this.handleTransaction(n);else{const l=e.afterColumnsChanged===!0;this.shotgunResetEverything(n,l)}}setTreeNodeRow(e,t){const o=e.row;o!==t&&(o?.data&&!t.data||(e.row=t))}handleTransaction(e){for(const{remove:t,update:o,add:r}of e.transactions)t?.length&&this.removeNodes(t,e),o?.length&&this.moveNodesInWrongPath(o,e),r?.length&&this.insertNodes(r,e);e.rowNodeOrder&&e.changedPath.forEachChangedNodeDepthFirst(t=>{lt(t.childrenAfterGroup,e.rowNodeOrder)&&e.changedPath.addParentNode(t)},!1,!0)}isNodeInTheRightPath(e,t){const o=this.getDataPath(e,t);let r=e;for(let s=o.length-1;s>=0;s--){if(!r||r.key!==o[s])return!1;r=r.parent}return r===this.root.row}moveNodesInWrongPath(e,t){const o=ht(this.root.row,e);for(const r of o)t.changedPath.isActive()&&t.changedPath.addParentNode(r.parent),this.isNodeInTheRightPath(r,t)||this.moveNode(r,t)}moveNode(e,t){if(this.removeNodesInStages([e],t),this.insertOneNode(e,t,!0),e.setData(e.data),t.changedPath.isActive()){const o=e.parent;t.changedPath.addParentNode(o)}}removeNodes(e,t){const{changedPath:o}=t;if(this.removeNodesInStages(e,t),o.isActive())for(const r of e)o.addParentNode(r.parent)}removeNodesInStages(e,t){const o=new G;for(const s of e){this.removeFromParent(s,o);for(let n=s.parent,i;n&&n!==this.root.row;n=i)i=n.parent,o.removeFromAllLeafChildren(n,s)}o.flush();const r=e.map(s=>s.parent);this.removeEmptyGroups(r,t)}removeEmptyGroups(e,t){let o=!0;for(;o;){o=!1;const r=new G;for(const s of e)for(let n=s,i;n&&n!==this.root.row;n=i){i=n.parent;const l=E(n.key,n.rowGroupColumn),a=n.parent;!(a?.childrenMapped?!a.childrenMapped[l]:!0)&&n.isEmptyRowGroupNode()&&(n.data&&t.getDataPath?.(n.data)?n.setGroup((n.childrenAfterGroup&&n.childrenAfterGroup.length>0)??!1):(o=!0,this.removeFromParent(n,r),n.setSelectedParams({newValue:!1,source:"rowGroupChanged"})))}r.flush()}}removeFromParent(e,t){e.parent&&(t?t.removeFromChildrenAfterGroup(e.parent,e):(it(e.parent.childrenAfterGroup,e),e.parent.updateHasChildren())),e.parent?.childrenMapped&&delete e.parent.childrenMapped[E(e.key,e.rowGroupColumn)],e.setRowTop(null),e.setRowIndex(null)}addToParent(e,t){const o=t?.childrenMapped;if(o){const r=E(e.key,e.rowGroupColumn);o[r]!==e&&(o[r]=e,t.childrenAfterGroup.push(e),t.setGroup(!0))}}shotgunResetEverything(e,t){if(t||this.oldGroupDisplayColIds===void 0){const s=this.showRowGroupColsService.getShowRowGroupCols()?.map(n=>n.getId()).join("-")??"";if(t){this.oldGroupDisplayColIds!==s&&this.checkAllGroupDataAfterColsChanged(this.root.row.childrenAfterGroup);return}this.oldGroupDisplayColIds=s}this.selectionService.filterFromSelection(s=>s&&!s.group);const o=this.root.row;o.leafGroup=!1,o.childrenAfterGroup=[],o.childrenMapped={},o.updateHasChildren();const r=o.sibling;r&&(r.childrenAfterGroup=o.childrenAfterGroup,r.childrenMapped=o.childrenMapped),this.insertNodes(o.allLeafChildren,e)}checkAllGroupDataAfterColsChanged(e){if(e)for(const t of e){const o={field:t.field,key:t.key,rowGroupColumn:t.rowGroupColumn,leafNode:t.allLeafChildren?.[0]};this.setGroupData(t,o),this.checkAllGroupDataAfterColsChanged(t.childrenAfterGroup)}}insertNodes(e,t){this.buildNodeCacheFromRows(e,t);for(const o of e)this.insertOneNode(o,t,!1),t.changedPath.isActive()&&t.changedPath.addParentNode(o.parent)}insertOneNode(e,t,o,r){const s=this.getDataPath(e,t),n=s.length-1,i=s[n];let l=this.root,a=this.root.row,u=null;for(let c=0,h=s.length-1;c<h;++c){const d=s[c];l=l.upsert(d);let p=a?.childrenMapped?.[d];p?this.setTreeNodeRow(l,p):(p=l.row,p?p.parent=a:(p=this.createGroup(d,a,c,t),this.setTreeNodeRow(l,p)),this.addToParent(p,a)),a=p,p.level!==c&&(p.level=c,u=p),r?.isRemoveFromAllLeafChildren(a,e)?r?.preventRemoveFromAllLeafChildren(a,e):a.allLeafChildren.push(e)}e.parent=a,e.level=n,this.ensureRowNodeFields(e,i),this.setGroupData(e,{key:i,field:null,rowGroupColumn:null}),o||this.setExpandedInitialValue(t,e),this.addToParent(e,a),u&&this.fixLevels(u,u.level)}fixLevels(e,t){e.level=t,e.childrenAfterGroup?.forEach(o=>this.fixLevels(o,t+1))}buildNodeCacheFromRows(e,t){this.root.map?.clear();for(let o=0;o<e.length;o++){const r=e[o],s=this.getDataPath(r,t);let n=this.root;for(let i=0;i<s.length;i++){const l=i===s.length-1,a=s[i];n=n.upsert(a),l&&(this.setTreeNodeRow(n,r),this.ensureRowNodeFields(r,a))}}this.backfillGroups(this.root,0,t)}ensureRowNodeFields(e,t){return t!==void 0&&(e.key=t),e.childrenMapped??(e.childrenMapped={}),e.allLeafChildren??(e.allLeafChildren=[]),e.childrenAfterGroup??(e.childrenAfterGroup=[]),e}backfillGroups(e,t,o){const r=e.map;if(r)for(const s of r.values()){let n=s.row;n||(n=this.createGroup(s.key,e.row,t,o),this.setTreeNodeRow(s,n)),s.map&&this.backfillGroups(s,t+1,o)}}createGroup(e,t,o,r){const s=new Z(this.beans);return s.group=!0,s.field=null,this.setGroupData(s,{key:e,field:null,rowGroupColumn:null}),s.key=e,s.id=Z.ID_PREFIX_ROW_GROUP+this.createGroupIdEnd(s,t,o),s.level=o,s.leafGroup=!1,s.allLeafChildren=[],s.setAllChildrenCount(0),s.rowGroupIndex=null,s.childrenAfterGroup=[],s.childrenMapped={},s.updateHasChildren(),s.parent=t,this.setExpandedInitialValue(r,s),s}createGroupIdEnd(e,t,o){if(o<0)return null;const r=t?this.createGroupIdEnd(t,t.parent,o-1):null;return`${r==null?"":r+"-"}${o}-${e.key}`}setGroupData(e,t){e.groupData={};const o=this.showRowGroupColsService.getShowRowGroupCols();for(const r of o)e.groupData[r.getColId()]=t.key}setExpandedInitialValue(e,t){const o=e.isGroupOpenByDefault;if(o){const r={rowNode:t,field:t.field,key:t.key,level:t.level,rowGroupColumn:t.rowGroupColumn};t.expanded=o(r)==!0;return}if(e.expandByDefault===-1){t.expanded=!0;return}t.expanded=t.level<e.expandByDefault}getDataPath({data:e},{getDataPath:t}){const o=t?.(e)||[];return o.length||at(`getDataPath() should not return an empty path for data ${e}`),o}};function E(e,t){return t?t.getId()+"-"+e:e}function ht(e,t){const o=[],r=new Map,s=new Set;for(let l=0;l<t.length;l++){const a=t[l],u=a.id;r.set(u,a),s.add(u)}const n=[e];let i=0;for(;i<n.length;){const l=n[i];if(i++,l===void 0)continue;const{id:a,childrenAfterGroup:u}=l,c=a&&r.get(a);if(c&&(o.push(c),s.delete(a)),s.size===0)return o;if(u)for(let h=0;h<u.length;h++)n.push(u[h])}return o}var pt=class extends Ye{constructor(){super(...arguments),this.beanName="groupStage"}wireBeans(e){this.selectableService=e.selectableService}execute(e){const t=this.gos.get("treeData")?ct:st;let o=this.strategy;o?.constructor!==t&&(this.destroyBean(o),o=this.createManagedBean(new t),this.strategy=o),o.execute(e),this.selectableService.updateSelectableAfterGrouping()}destroy(){this.destroyBean(this.strategy),this.strategy=void 0,super.destroy()}};import{BeanStub as dt,_cloneObject as gt,_iterateObject as H}from"@ag-grid-community/core";var $="PivotRowTotal_",mt=class extends dt{constructor(){super(...arguments),this.beanName="pivotColDefService"}wireBeans(e){this.columnModel=e.columnModel,this.funcColsService=e.funcColsService,this.columnNameService=e.columnNameService}postConstruct(){const e=()=>this.gos.get("serverSidePivotResultFieldSeparator")??"_";this.fieldSeparator=e(),this.addManagedPropertyListener("serverSidePivotResultFieldSeparator",()=>{this.fieldSeparator=e()});const t=()=>this.gos.get("pivotDefaultExpanded");this.pivotDefaultExpanded=t(),this.addManagedPropertyListener("pivotDefaultExpanded",()=>{this.pivotDefaultExpanded=t()})}createPivotColumnDefs(e){const t=this.createPivotColumnsFromUniqueValues(e);function o(n,i=[]){return n.forEach(l=>{l.children!==void 0?o(l.children,i):i.push(l)}),i}const r=o(t);this.addRowGroupTotals(t,r),this.addExpandablePivotGroups(t,r),this.addPivotTotalsToGroups(t,r);const s=r.map(n=>gt(n));return{pivotColumnGroupDefs:t,pivotColumnDefs:s}}createPivotColumnsFromUniqueValues(e){const t=this.funcColsService.getPivotColumns(),o=t.length;return this.recursivelyBuildGroup(0,e,[],o,t)}recursivelyBuildGroup(e,t,o,r,s){const n=this.funcColsService.getValueColumns();if(e>=r)return this.buildMeasureCols(o);const i=s[e].getColDef(),l=this.headerNameComparator.bind(this,i.pivotComparator);if(n.length===1&&this.gos.get("removePivotHeaderRowWhenSingleValueColumn")&&e===r-1){const u=[];return H(t,c=>{const h=[...o,c],d=this.createColDef(n[0],c,h);d.columnGroupShow="open",u.push(d)}),u.sort(l),u}const a=[];return H(t,(u,c)=>{const h=this.pivotDefaultExpanded===-1||e<this.pivotDefaultExpanded,d=[...o,u];a.push({children:this.recursivelyBuildGroup(e+1,c,d,r,s),headerName:u,pivotKeys:d,columnGroupShow:"open",openByDefault:h,groupId:this.generateColumnGroupId(d)})}),a.sort(l),a}buildMeasureCols(e){const t=this.funcColsService.getValueColumns();return t.length===0?[this.createColDef(null,"-",e)]:t.map(o=>{const r=this.columnNameService.getDisplayNameForColumn(o,"header");return{...this.createColDef(o,r,e),columnGroupShow:"open"}})}addExpandablePivotGroups(e,t){if(this.gos.get("suppressExpandablePivotGroups")||this.gos.get("pivotColumnGroupTotals"))return;const o=(r,s,n)=>{const i=r;if(i.children){const l=new Map;i.children.forEach(u=>{o(u,s,l)});const a=!i.children.some(u=>u.children);this.funcColsService.getValueColumns().forEach(u=>{const c=this.columnNameService.getDisplayNameForColumn(u,"header"),h=this.createColDef(u,c,r.pivotKeys);h.pivotTotalColumnIds=l.get(u.getColId()),h.columnGroupShow="closed",h.aggFunc=u.getAggFunc(),a||(r.children.push(h),s.push(h))}),this.merge(n,l)}else{const l=r;if(!l.pivotValueColumn)return;const a=l.pivotValueColumn.getColId(),u=n.has(a)?n.get(a):[];u.push(l.colId),n.set(a,u)}};e.forEach(r=>{o(r,t,new Map)})}addPivotTotalsToGroups(e,t){if(!this.gos.get("pivotColumnGroupTotals"))return;const o=this.gos.get("pivotColumnGroupTotals")==="after",r=this.funcColsService.getValueColumns(),s=r.map(i=>i.getAggFunc());if(!s||s.length<1||!this.sameAggFuncs(s))return;const n=r[0];e.forEach(i=>{this.recursivelyAddPivotTotal(i,t,n,o)})}recursivelyAddPivotTotal(e,t,o,r){const s=e;if(!s.children){const i=e;return i.colId?[i.colId]:null}let n=[];if(s.children.forEach(i=>{const l=this.recursivelyAddPivotTotal(i,t,o,r);l&&(n=n.concat(l))}),s.children.length>1){const l=this.localeService.getLocaleTextFunc()("pivotColumnGroupTotals","Total"),a=this.createColDef(o,l,e.pivotKeys,!0);a.pivotTotalColumnIds=n,a.aggFunc=o.getAggFunc(),a.columnGroupShow=this.gos.get("suppressExpandablePivotGroups")?"open":void 0;const u=e.children;r?u.push(a):u.unshift(a),t.push(a)}return n}addRowGroupTotals(e,t){if(!this.gos.get("pivotRowTotals"))return;const o=this.gos.get("pivotRowTotals")==="after",r=this.funcColsService.getValueColumns(),s=o?r.slice():r.slice().reverse();for(let n=0;n<s.length;n++){const i=s[n];let l=[];e.forEach(u=>{l=l.concat(this.extractColIdsForValueColumn(u,i))});const a=s.length>1||!this.gos.get("removePivotHeaderRowWhenSingleValueColumn");this.createRowGroupTotal(e,t,i,l,o,a)}}extractColIdsForValueColumn(e,t){const o=e;if(!o.children){const s=o;return s.pivotValueColumn===t&&s.colId?[s.colId]:[]}let r=[];return o.children.forEach(s=>{this.extractColIdsForValueColumn(s,t);const n=this.extractColIdsForValueColumn(s,t);r=r.concat(n)}),r}createRowGroupTotal(e,t,o,r,s,n){const i=this.funcColsService.getValueColumns();let l;if(i.length===0)l=this.createColDef(null,"-",[]);else{const u=this.columnNameService.getDisplayNameForColumn(o,"header");l=this.createColDef(o,u,[]),l.pivotTotalColumnIds=r}l.colId=$+l.colId,t.push(l);const a=n?{children:[l],pivotKeys:[],groupId:`${$}_pivotGroup_${o.getColId()}`}:l;s?e.push(a):e.unshift(a)}createColDef(e,t,o,r=!1){const s={};if(e){const n=e.getColDef();Object.assign(s,n),s.hide=!1}return s.headerName=t,s.colId=this.generateColumnId(o||[],e&&!r?e.getColId():""),s.field=s.colId,s.valueGetter=n=>n.data?.[n.colDef.field],s.pivotKeys=o,s.pivotValueColumn=e,s.filter===!0&&(s.filter="agNumberColumnFilter"),s}sameAggFuncs(e){if(e.length==1)return!0;for(let t=1;t<e.length;t++)if(e[t]!==e[0])return!1;return!0}headerNameComparator(e,t,o){return e?e(t.headerName,o.headerName):t.headerName&&!o.headerName?1:!t.headerName&&o.headerName?-1:!t.headerName||!o.headerName?0:t.headerName<o.headerName?-1:t.headerName>o.headerName?1:0}merge(e,t){t.forEach((o,r)=>{const n=[...e.has(r)?e.get(r):[],...o];e.set(r,n)})}generateColumnGroupId(e){return`pivotGroup_${this.funcColsService.getPivotColumns().map(o=>o.getColId()).join("-")}_${e.join("-")}`}generateColumnId(e,t){return`pivot_${this.funcColsService.getPivotColumns().map(r=>r.getColId()).join("-")}_${e.join("-")}_${t}`}createColDefsFromFields(e){const t={};for(let s=0;s<e.length;s++){const i=e[s].split(this.fieldSeparator);let l=t;for(let a=0;a<i.length;a++){const u=i[a];l[u]==null&&(l[u]={}),l=l[u]}}const o=(s,n,i,l)=>{const a=[];for(const h in i){const d=i[h],p=o(`${s}${this.fieldSeparator}${h}`,h,d,l+1);a.push(p)}if(a.length===0){const h=this.columnModel.getColDefCol(n);if(h){const p=this.columnNameService.getDisplayNameForColumn(h,"header")??n,m=this.createColDef(h,p,void 0,!1);return m.colId=s,m.aggFunc=h.getAggFunc(),m.valueGetter=S=>S.data?.[s],m}return{colId:s,headerName:n,valueGetter:p=>p.data?.[s]}}return this.gos.get("removePivotHeaderRowWhenSingleValueColumn")&&a.length===1&&"colId"in a[0]?(a[0].headerName=n,a[0]):{openByDefault:this.pivotDefaultExpanded===-1||l<this.pivotDefaultExpanded,groupId:s,headerName:n,children:a}},r=[];for(const s in t){const n=t[s],i=o(s,s,n,0);r.push(i)}return r}};import{BeanStub as ft,_iterateObject as Ct,_missing as vt}from"@ag-grid-community/core";var W="Exceeded maximum allowed pivot column count.",Gt=class extends ft{constructor(){super(...arguments),this.beanName="pivotStage",this.uniqueValues={},this.lastTimeFailed=!1,this.maxUniqueValues=-1,this.currentUniqueCount=0}wireBeans(e){this.valueService=e.valueService,this.columnModel=e.columnModel,this.pivotResultColsService=e.pivotResultColsService,this.funcColsService=e.funcColsService,this.pivotColDefService=e.pivotColDefService}execute(e){const t=e.changedPath;this.columnModel.isPivotActive()?this.executePivotOn(t):this.executePivotOff(t)}executePivotOff(e){this.aggregationColumnsHashLastTime=null,this.uniqueValues={},this.pivotResultColsService.isPivotResultColsPresent()&&(this.pivotResultColsService.setPivotResultCols(null,"rowModelUpdated"),e&&e.setInactive())}executePivotOn(e){const t=this.funcColsService.getValueColumns().length??1,o=this.gos.get("pivotMaxGeneratedColumns");this.maxUniqueValues=o===-1?-1:o/t;let r;try{r=this.bucketUpRowNodes(e)}catch(g){if(g.message===W){this.pivotResultColsService.setPivotResultCols([],"rowModelUpdated"),this.eventService.dispatchEvent({type:"pivotMaxColumnsExceeded",message:g.message}),this.lastTimeFailed=!0;return}throw g}const s=this.setUniqueValues(r),n=this.funcColsService.getValueColumns(),i=n.map(g=>`${g.getId()}-${g.getColDef().headerName}`).join("#"),l=n.map(g=>g.getAggFunc().toString()).join("#"),a=this.aggregationColumnsHashLastTime!==i,u=this.aggregationFuncsHashLastTime!==l;this.aggregationColumnsHashLastTime=i,this.aggregationFuncsHashLastTime=l;const c=this.funcColsService.getRowGroupColumns().map(g=>g.getId()).join("#"),h=c!==this.groupColumnsHashLastTime;this.groupColumnsHashLastTime=c;const d=this.gos.get("pivotRowTotals"),p=this.gos.get("pivotColumnGroupTotals"),m=this.gos.get("suppressExpandablePivotGroups"),S=this.gos.get("removePivotHeaderRowWhenSingleValueColumn"),j=d!==this.pivotRowTotalsLastTime||p!==this.pivotColumnGroupTotalsLastTime||m!==this.suppressExpandablePivotGroupsLastTime||S!==this.removePivotHeaderRowWhenSingleValueColumnLastTime;if(this.pivotRowTotalsLastTime=d,this.pivotColumnGroupTotalsLastTime=p,this.suppressExpandablePivotGroupsLastTime=m,this.removePivotHeaderRowWhenSingleValueColumnLastTime=S,this.lastTimeFailed||s||a||h||u||j){const{pivotColumnGroupDefs:g,pivotColumnDefs:X}=this.pivotColDefService.createPivotColumnDefs(this.uniqueValues);this.pivotColumnDefs=X,this.pivotResultColsService.setPivotResultCols(g,"rowModelUpdated"),e&&e.setInactive()}this.lastTimeFailed=!1}setUniqueValues(e){const t=JSON.stringify(e),o=JSON.stringify(this.uniqueValues);return t!==o?(this.uniqueValues=e,!0):!1}bucketUpRowNodes(e){this.currentUniqueCount=0;const t={};e.forEachChangedNodeDepthFirst(r=>{r.leafGroup&&(r.childrenMapped=null)});const o=r=>{r.leafGroup?this.bucketRowNode(r,t):r.childrenAfterFilter?.forEach(o)};return e.executeFromRootNode(o),t}bucketRowNode(e,t){const o=this.funcColsService.getPivotColumns();o.length===0?e.childrenMapped=null:e.childrenMapped=this.bucketChildren(e.childrenAfterFilter,o,0,t),e.sibling&&(e.sibling.childrenMapped=e.childrenMapped)}bucketChildren(e,t,o,r){const s={},n=t[o];if(e.forEach(i=>{let l=this.valueService.getKeyForNode(n,i);if(vt(l)&&(l=""),!r[l]){this.currentUniqueCount+=1,r[l]={};const a=this.maxUniqueValues!==-1,u=this.currentUniqueCount>this.maxUniqueValues;if(a&&u)throw Error(W)}s[l]||(s[l]=[]),s[l].push(i)}),o===t.length-1)return s;{const i={};return Ct(s,(l,a)=>{i[l]=this.bucketChildren(a,t,o+1,r[l])}),i}}getPivotColumnDefs(){return this.pivotColumnDefs}};function Ft(e,t,o){e.aggFuncService&&e.aggFuncService.addAggFuncs({key:o})}function St(e,t){e.aggFuncService&&e.aggFuncService.addAggFuncs(t)}function wt(e){e.aggFuncService&&e.aggFuncService.clear()}function yt(e,t,o){e.funcColsService.setColumnAggFunc(t,o,"api")}function Pt(e){return e.columnModel.isPivotMode()}function At(e,t,o){return e.pivotResultColsService.lookupPivotResultCol(t,o)}function Dt(e,t){e.funcColsService.setValueColumns(t,"api")}function Rt(e){return e.funcColsService.getValueColumns()}function Mt(e,t){e.funcColsService.removeValueColumns([t],"api")}function It(e,t){e.funcColsService.removeValueColumns(t,"api")}function Et(e,t){e.funcColsService.addValueColumns([t],"api")}function Tt(e,t){e.funcColsService.addValueColumns(t,"api")}function bt(e,t){e.funcColsService.setRowGroupColumns(t,"api")}function xt(e,t){e.funcColsService.removeRowGroupColumns([t],"api")}function Nt(e,t){e.funcColsService.removeRowGroupColumns(t,"api")}function Lt(e,t){e.funcColsService.addRowGroupColumns([t],"api")}function Vt(e,t){e.funcColsService.addRowGroupColumns(t,"api")}function Ot(e,t,o){e.funcColsService.moveRowGroupColumn(t,o,"api")}function kt(e){return e.funcColsService.getRowGroupColumns()}function Bt(e,t){e.funcColsService.setPivotColumns(t,"api")}function _t(e,t){e.funcColsService.removePivotColumns([t],"api")}function Ut(e,t){e.funcColsService.removePivotColumns(t,"api")}function Zt(e,t){e.funcColsService.addPivotColumns([t],"api")}function Ht(e,t){e.funcColsService.addPivotColumns(t,"api")}function $t(e){return e.funcColsService.getPivotColumns()}function Wt(e,t){e.pivotResultColsService.setPivotResultCols(t,"api")}function Kt(e){const t=e.pivotResultColsService.getPivotResultCols();return t?t.list:null}import{BeanStub as qt}from"@ag-grid-community/core";var jt=class extends qt{constructor(){super(...arguments),this.beanName="showRowGroupColsService"}wireBeans(e){this.columnModel=e.columnModel,this.funcColsService=e.funcColsService}refresh(){this.showRowGroupCols=[],this.showRowGroupColsMap={},this.columnModel.getCols().forEach(e=>{const o=e.getColDef().showRowGroup,r=typeof o=="string";!r&&!(o===!0)||(this.showRowGroupCols.push(e),r?this.showRowGroupColsMap[o]=e:this.funcColsService.getRowGroupColumns().forEach(i=>{this.showRowGroupColsMap[i.getId()]=e}))})}getShowRowGroupCols(){return this.showRowGroupCols}getShowRowGroupCol(e){return this.showRowGroupColsMap[e]}},F="32.1.0",T=C({version:F,moduleName:`${y.RowGroupingModule}-core`,beans:[Ce,Ze,pt,mt,Gt,ie,we,jt,_e],userComponents:[{name:"agGroupRowRenderer",classImp:b},{name:"agGroupCellRenderer",classImp:b}],controllers:[{name:"groupCellRendererCtrl",classImp:Y}],dependantModules:[Q]}),Xt=C({version:F,moduleName:`${y.RowGroupingModule}-api`,apiFunctions:{addAggFunc:Ft,addAggFuncs:St,clearAggFuncs:wt,setColumnAggFunc:yt,isPivotMode:Pt,getPivotResultColumn:At,setValueColumns:Dt,getValueColumns:Rt,removeValueColumn:Mt,removeValueColumns:It,addValueColumn:Et,addValueColumns:Tt,setRowGroupColumns:bt,removeRowGroupColumn:xt,removeRowGroupColumns:Nt,addRowGroupColumn:Lt,addRowGroupColumns:Vt,getRowGroupColumns:kt,moveRowGroupColumn:Ot,setPivotColumns:Bt,removePivotColumn:_t,removePivotColumns:Ut,addPivotColumn:Zt,addPivotColumns:Ht,getPivotColumns:$t,setPivotResultColumns:Wt,getPivotResultColumns:Kt},dependantModules:[T]}),K=C({version:F,moduleName:"@ag-grid-enterprise/group-filter",userComponents:[{name:"agGroupColumnFilter",classImp:qe}],dependantModules:[T,z]}),zt=C({version:F,moduleName:"@ag-grid-enterprise/group-floating-filter",userComponents:[{name:"agGroupColumnFloatingFilter",classImp:Qe}],dependantModules:[K,J]}),Jt=C({version:F,moduleName:y.RowGroupingModule,dependantModules:[T,Xt,K,zt]});import{_createIconNoSpan as Qt}from"@ag-grid-community/core";var Yt=class extends A{constructor(e){super(e,"aggregation")}postConstruct(){const e=this.localeService.getLocaleTextFunc(),t=e("valueColumnsEmptyMessage","Drag here to aggregate"),o=e("values","Values");super.init({icon:Qt("valuePanel",this.gos,null),emptyMessage:t,title:o}),this.addManagedEventListeners({columnValueChanged:this.refreshGui.bind(this)})}getAriaLabel(){return this.localeService.getLocaleTextFunc()("ariaValuesDropZonePanelLabel","Values")}getTooltipParams(){const e=super.getTooltipParams();return e.location="valueColumnsList",e}getIconName(){return this.isPotentialDndItems()?"aggregate":"notAllowed"}isItemDroppable(e,t){return this.gos.get("functionsReadOnly")||!e.isPrimary()?!1:e.isAllowValue()&&(!e.isValueActive()||this.isSourceEventFromTarget(t))}updateItems(e){this.funcColsService.setValueColumns(e,"toolPanelUi")}getExistingItems(){return this.funcColsService.getValueColumns()}};export{V as PivotDropZonePanel,O as RowGroupDropZonePanel,Jt as RowGroupingModule,Yt as ValuesDropZonePanel};
